{"version":3,"sources":["health_institute_marker.svg","marker.svg","education_institute_marker.svg","Map.js","ShapeFileMap.js","App.js","reportWebVitals.js","index.js"],"names":["L","Mask","Polygon","extend","options","stroke","color","width","opacity","fillColor","fillOpacity","clickable","outerBounds","LatLngBounds","initialize","latLngs","outerBoundsLatLngs","this","getSouthWest","getNorthWest","getNorthEast","getSouthEast","prototype","call","mask","Map","type","useState","nepal","setNepal","provinces","setProvinces","districts","setDistricts","mapRef","useRef","layerRef","markerRef","list","coord","id","project_name_in_english","region","useEffect","current","map","center","zoom","attributionControl","trackResize","scrollWheelZoom","tileSize","layers","tileLayer","maxZoom","attribution","remove","fetch","then","response","json","data","Object","keys","length","mapPlotGeojson","mapPlotSimpleMarker","mapPlotCustomMarker","mapPlotMarkerCluster","mapPlotPlugin","initialMap","coordinates","features","geometry","i","push","LatLng","geoJSON","addTo","style","weight","addData","onEachFeature","marker","bindPopup","eachData","icon","iconUrl","educationMarkerIcon","healthMarkerIcon","iconAnchor","popupAnchor","clearLayers","L1","MarkerClusterGroup","provinceMap","addLayer","layerGroup","Shapefile","GeoJSON","importUrl","file","Util","setOptions","cw","isArrayBuffer","worker","Function","addFileData","self","fire","isArrayBufer","makeUrl","close","err","shp","catch","shapefile","a","b","c","ShapeFileMap","shapeData","setShapeData","arrayBuffer","buffer","mapPlot","App","to","path","Home","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7967d395.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/health_institute_marker.63700538.svg\";","export default __webpack_public_path__ + \"static/media/marker.c979f09c.svg\";","export default __webpack_public_path__ + \"static/media/education_institute_marker.c0047cd4.svg\";","import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport L1 from \"leaflet.markercluster\";\n\nimport markerIcon from './marker.svg';\nimport healthMarkerIcon from './health_institute_marker.svg';\nimport educationMarkerIcon from './education_institute_marker.svg';\n\nL.Mask = L.Polygon.extend({\n    options: {\n        stroke: true,\n        color: '#7ca7f8',\n        width: 1,\n        opacity: 0.2,\n        fillColor: '#2a2f38',\n        fillOpacity: 1,\n        clickable: true,\n        outerBounds: new L.LatLngBounds([-90, -360], [90, 360]),\n    },\n\n    initialize: function (latLngs, options) {\n        const outerBoundsLatLngs = [\n            this.options.outerBounds.getSouthWest(),\n            this.options.outerBounds.getNorthWest(),\n            this.options.outerBounds.getNorthEast(),\n            this.options.outerBounds.getSouthEast(),\n        ];\n\n        L.Polygon.prototype.initialize.call(this, [outerBoundsLatLngs, latLngs], options);\n    },\n});\n\nL.mask = function (latLngs, options) {\n    return new L.Mask(latLngs, options);\n};\n\n\nconst Map = ({ type }) => {\n    const [nepal, setNepal] = useState({});\n    const [provinces, setProvinces] = useState({});\n    const [districts, setDistricts] = useState({});\n    const mapRef = useRef(null);\n    const layerRef = useRef(null);\n    const markerRef = useRef(null);\n    const list = [\n        {\n            coord: [26.6726, 87.6792],\n            id: 1,\n            project_name_in_english: \"Education Data\",\n            region: \"Damak Nagarpalika\",\n            type: 'Education'\n        },\n        {\n            coord: [26.8, 87.6792],\n            id: 2,\n            project_name_in_english: \"Education Data 23\",\n            region: \"Damak Nagarpalika\",\n            type: 'Education'\n        },\n        {\n            coord: [26.7, 87.6792],\n            id: 3,\n            project_name_in_english: \"Education Data 3\",\n            region: \"Damak Nagarpalika\",\n            type: 'Education'\n        },\n        {\n            coord: [27.6726, 87.6792],\n            id: 2,\n            project_name_in_english: \"Health Data testingggggrrr\",\n            region: \"Damak Nagarpalika\",\n            type: 'Health'\n        },\n    ];\n\n    useEffect(() => {\n        mapRef.current = L.map(\"map\", {\n            center: [28.3949, 84.124],\n            zoom: 7,\n            // minZoom:7,\n            attributionControl: true,\n            trackResize: false,\n            scrollWheelZoom: false,\n            tileSize: 512,\n            layers: [\n                L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n                    maxZoom: 18,\n                    attribution:\n                        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n                }),\n            ],\n        });\n        return (() => {\n            mapRef.current.remove();\n            mapRef.current = null;\n            layerRef.current = null;\n            markerRef.current = null;\n        })\n    }, [type]);\n\n    useEffect(() => {\n        fetch(\"/data/Nepal.json\")\n            .then((response) => response.json())\n            .then((data) => setNepal(data));\n\n    }, [type]);\n\n    useEffect(() => {\n        fetch('/data/NewNepalProvince.json')\n            .then((response) => response.json())\n            .then((data) => setProvinces(data));\n\n    }, [type]);\n\n    useEffect(() => {\n        fetch('/data/NewNepalDistrict.json')\n            .then((response) => response.json())\n            .then((data) => setDistricts(data));\n\n    }, [type]);\n\n\n    useEffect(() => {\n        if (Object.keys(nepal).length && Object.keys(provinces).length && Object.keys(districts).length) {\n            type === 'geojson' ? mapPlotGeojson()\n                : type === 'simplemarker' ? mapPlotSimpleMarker(list)\n                    : type === 'custommarker' ? mapPlotCustomMarker(list)\n                        : type === 'clustermarker' ? mapPlotMarkerCluster(list)\n                            : type === 'plugin' ? mapPlotPlugin(list)\n                                : initialMap()\n\n        }\n    }, [list, nepal, provinces, districts, type]);\n\n\n    const initialMap = () => { }\n\n    const mapPlotGeojson = () => {\n        const latLngs = [];\n        const coordinates = nepal.features[0].geometry.coordinates[0][0];\n\n        for (let i = 0; i < coordinates.length; i++) {\n            latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));\n        }\n\n        if (layerRef.current === null && latLngs.length) {\n            layerRef.current = L.geoJSON(nepal.features).addTo(mapRef.current);\n        }\n    }\n\n    const mapPlotSimpleMarker = (data) => {\n        const latLngs = [];\n        const coordinates = nepal.features[0].geometry.coordinates[0][0];\n\n        for (let i = 0; i < coordinates.length; i++) {\n            latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));\n        }\n\n        if (layerRef.current === null && latLngs.length) {\n            const options = {\n                style: {\n                    color: '#2564de',\n                    weight: 2,\n                    opacity: 0.1,\n                    fillColor: 'transparent',\n                },\n            };\n\n            layerRef.current = L.geoJSON(nepal.features, options).addTo(mapRef.current);\n            layerRef.current.addData(districts);\n            layerRef.current = L.geoJSON(provinces.features, {\n                style: { ...options.style, opacity: 0.3 },\n                onEachFeature: () => 'hello',\n            }).addTo(mapRef.current);\n\n        }\n        L.marker(data[0].coord).bindPopup('test').addTo(mapRef.current)\n    }\n\n    const mapPlotCustomMarker = (data) => {\n        const latLngs = [];\n        const coordinates = nepal.features[0].geometry.coordinates[0][0];\n\n        for (let i = 0; i < coordinates.length; i++) {\n            latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));\n        }\n\n        if (layerRef.current === null && latLngs.length) {\n            const options = {\n                style: {\n                    color: '#2564de',\n                    weight: 2,\n                    opacity: 0.1,\n                    fillColor: 'transparent',\n                },\n            };\n\n            layerRef.current = L.geoJSON(nepal.features, options).addTo(mapRef.current);\n            layerRef.current.addData(districts);\n            layerRef.current = L.geoJSON(provinces.features, {\n                style: { ...options.style, opacity: 0.3 },\n                onEachFeature: () => 'hello',\n            }).addTo(mapRef.current);\n\n        }\n        data.map((eachData) => (L.marker(eachData.coord, {\n            icon: L.icon({\n                iconUrl: eachData.type === 'Education' ? educationMarkerIcon : healthMarkerIcon,\n                iconAnchor: [11, 41],\n                popupAnchor: [0, -41],\n            })\n        }).bindPopup(\n            `<div class=\"map-popup\">\n      <div class=\"title\">\n        ${`${eachData.project_name_in_english}`\n            }\n      </div>`\n        ).addTo(mapRef.current)))\n\n    }\n\n    const mapPlotMarkerCluster = (data) => {\n        const latLngs = [];\n        const coordinates = nepal.features[0].geometry.coordinates[0][0];\n\n        for (let i = 0; i < coordinates.length; i++) {\n            latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));\n        }\n\n        if (layerRef.current === null && latLngs.length) {\n            const options = {\n                style: {\n                    color: '#2564de',\n                    weight: 2,\n                    opacity: 0.1,\n                    fillColor: 'transparent',\n                },\n            };\n\n            layerRef.current = L.geoJSON(nepal.features, options).addTo(mapRef.current);\n            layerRef.current.addData(districts);\n            layerRef.current = L.geoJSON(provinces.features, {\n                style: { ...options.style, opacity: 0.3 },\n                onEachFeature: () => 'hello',\n            }).addTo(mapRef.current);\n\n        }\n        if (markerRef.current) {\n            markerRef.current.clearLayers();\n        }        \n        markerRef.current = new L1.MarkerClusterGroup();\n        let provinceMap = data.map((eachData) =>\n            markerRef.current.addLayer(\n                (L.marker(eachData.coord, {\n                    icon: L.icon({\n                        iconUrl: eachData.type === 'Education' ? educationMarkerIcon : healthMarkerIcon,\n                        iconAnchor: [11, 41],\n                        popupAnchor: [0, -41],\n                    })\n                }).bindPopup(\n                    `<div class=\"map-popup\">\n              <div class=\"title\">\n                ${`${eachData.project_name_in_english}`\n                    }\n              </div>`\n                ))\n            )\n        );\n        const layerGroup = L.layerGroup(provinceMap);\n        layerGroup.addTo(mapRef.current);\n        mapRef.current.addLayer(markerRef.current);\n    }\n\n    const mapPlotPlugin = (data) => {\n        const latLngs = [];\n        const coordinates = nepal.features[0].geometry.coordinates[0][0];\n\n        for (let i = 0; i < coordinates.length; i++) {\n            latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));\n        }\n\n        if (layerRef.current === null && latLngs.length) {\n            layerRef.current = L.mask(latLngs).addTo(mapRef.current);\n\n            const options = {\n                style: {\n                    color: '#2564de',\n                    weight: 2,\n                    opacity: 0.1,\n                    fillColor: 'transparent',\n                },\n            };\n\n            layerRef.current = L.geoJSON(nepal.features, options).addTo(mapRef.current);\n            layerRef.current.addData(districts);\n            layerRef.current = L.geoJSON(provinces.features, {\n                style: { ...options.style, opacity: 0.3 },\n                onEachFeature: () => 'hello',\n            }).addTo(mapRef.current);\n\n        }\n        if (markerRef.current) {\n            markerRef.current.clearLayers();\n        }\n        markerRef.current = new L1.MarkerClusterGroup();\n\n        const provinceMap = [];\n        data.map((eachData) =>\n            provinceMap.push(\n                markerRef.current.addLayer(\n                    (L.marker(eachData.coord, {\n                        icon: L.icon({\n                            iconUrl: eachData.type === 'Education' ? educationMarkerIcon : healthMarkerIcon,\n                            iconAnchor: [11, 41],\n                            popupAnchor: [0, -41],\n                        })\n                    }).bindPopup(\n                        `<div class=\"map-popup\">\n              <div class=\"title\">\n                ${`${eachData.project_name_in_english}`\n                        }\n              </div>`\n                    ))\n                )\n            )\n        );\n\n        const layerGroup = L.layerGroup(provinceMap);\n        layerGroup.addTo(mapRef.current);\n\n        mapRef.current.addLayer(markerRef.current);\n    }\n\n\n    return (\n        <>\n            <div id=\"map\" />\n        </>\n    );\n};\n\nexport default Map;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport shp from 'shpjs';\n\n/* global cw, shp */\nL.Shapefile = L.GeoJSON.extend({\n  options: {\n    importUrl: 'shp.js',\n  },\n\n  initialize: function (file, options) {\n    L.Util.setOptions(this, options);\n    if (typeof cw !== 'undefined') {\n      /*eslint-disable no-new-func*/\n      if (!options.isArrayBuffer) {\n        this.worker = cw(\n          new Function(\n            'data',\n            'cb',\n            'importScripts(\"' + this.options.importUrl + '\");shp(data).then(cb);'\n          )\n        );\n      } else {\n        this.worker = cw(\n          new Function(\n            'data',\n            'importScripts(\"' +\n            this.options.importUrl +\n            '\"); return shp.parseZip(data);'\n          )\n        );\n      }\n      /*eslint-enable no-new-func*/\n    }\n    L.GeoJSON.prototype.initialize.call(\n      this,\n      {\n        features: [],\n      },\n      options\n    );\n    this.addFileData(file);\n  },\n\n  addFileData: function (file) {\n    var self = this;\n    this.fire('data:loading');\n    if (typeof file !== 'string' && !('byteLength' in file)) {\n      var data = this.addData(file);\n      this.fire('data:loaded');\n      return data;\n    }\n    if (!this.worker) {\n      shp(file)\n        .then(function (data) {\n          self.addData(data);\n          self.fire('data:loaded');\n        })\n        .catch(function (err) {\n          self.fire('data:error', err);\n        });\n      return this;\n    }\n    var promise;\n    if (this.options.isArrayBufer) {\n      promise = this.worker.data(file, [file]);\n    } else {\n      promise = this.worker.data(cw.makeUrl(file));\n    }\n\n    promise\n      .then(function (data) {\n        self.addData(data);\n        self.fire('data:loaded');\n        self.worker.close();\n      })\n      .then(\n        function () { },\n        function (err) {\n          self.fire('data:error', err);\n        }\n      );\n    return this;\n  },\n});\n\nL.shapefile = function (a, b, c) {\n  return new L.Shapefile(a, b, c);\n};\n\n\nconst ShapeFileMap = () => {\n  const mapRef = useRef(null);\n  const layerRef = useRef(null);\n  const markerRef = useRef(null);\n  const [shapeData, setShapeData] = useState(null);\n\n  const list = [\n    {\n      coord: [26.6726, 87.6792],\n      id: 1,\n      project_name_in_english: \"Education Data\",\n      region: \"Damak Nagarpalika\",\n      type: 'Education'\n    },\n    {\n      coord: [26.8, 87.6792],\n      id: 2,\n      project_name_in_english: \"Education Data 23\",\n      region: \"Damak Nagarpalika\",\n      type: 'Education'\n    },\n    {\n      coord: [26.7, 87.6792],\n      id: 3,\n      project_name_in_english: \"Education Data 3\",\n      region: \"Damak Nagarpalika\",\n      type: 'Education'\n    },\n    {\n      coord: [27.6726, 87.6792],\n      id: 2,\n      project_name_in_english: \"Health Data testingggggrrr\",\n      region: \"Damak Nagarpalika\",\n      type: 'Health'\n    },\n  ];\n\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [28.3949, 84.124],\n      zoom: 7,\n      // minZoom:7,\n      attributionControl: true,\n      trackResize: false,\n      scrollWheelZoom: false,\n      tileSize: 512,\n      layers: [\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          maxZoom: 18,\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }),\n      ],\n    });\n    return (() => {\n      mapRef.current.remove();\n      mapRef.current = null;\n      layerRef.current = null;\n      markerRef.current = null;\n    })\n  }, []);\n\n  useEffect(() => {\n    fetch('/data/udaypur.zip')\n      .then(function (response) {\n        return response.arrayBuffer();\n      })\n      .then((buffer) => setShapeData(buffer));\n  }, []);\n\n\n\n\n  useEffect(() => {\n    if (shapeData)\n      mapPlot(list);\n  }, [list, shapeData]);\n\n  const mapPlot = (data) => {\n    if (layerRef.current === null) {\n      L.shapefile(shapeData).addTo(mapRef.current);\n\n    }\n    if (markerRef.current) {\n      markerRef.current.clearLayers();\n    }\n  }\n\n\n  return (\n    <>\n      <div id=\"map\" />\n    </>\n  );\n};\n\nexport default ShapeFileMap;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Map from './Map'\nimport ShapeMap from './ShapeFileMap'\nimport './App.css'\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/map\">Basic Map</Link>\n            </li>\n            <li>\n              <Link to=\"/geojson/map\">Geojson map</Link>\n            </li>\n            <li>\n              <Link to=\"/shapefile/map\">Shapefile map</Link>\n            </li>\n            <li>\n              <Link to=\"/marker/map\">Marker in map</Link>\n            </li>\n            <li>\n              <Link to=\"/custom-marker/map\">Custom Marker in map</Link>\n            </li>\n            <li>\n              <Link to=\"/marker-cluster/map\">Marker Cluster in map</Link>\n            </li>\n            <li>\n              <Link to=\"/plugin/map\">Leaflet plugin</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/map\">\n            <Map type=\"simple\" />\n          </Route>\n          <Route path=\"/geojson/map\">\n            <Map type=\"geojson\" />\n          </Route>\n          <Route path=\"/shapefile/map\">\n            <ShapeMap />\n          </Route>\n          <Route path=\"/marker/map\">\n            <Map type=\"simplemarker\" />\n          </Route>\n          <Route path=\"/custom-marker/map\">\n            <Map type=\"custommarker\" />\n          </Route>\n          <Route path=\"/marker-cluster/map\">\n            <Map type=\"clustermarker\" />\n          </Route>\n          <Route path=\"/plugin/map\">\n            <Map type=\"plugin\" />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}